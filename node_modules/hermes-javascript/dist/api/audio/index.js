"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ref_1 = __importDefault(require("ref"));
const ApiSubset_1 = __importDefault(require("../ApiSubset"));
/**
 * @experimental
 *
 * Warning: Experimental, use at your own risk!
 *
 * The Audio API subset.
 */
class Audio extends ApiSubset_1.default {
    constructor(protocolHandler, call, options) {
        super(protocolHandler, call, options, 'hermes_protocol_handler_audio_server_facade');
        this.publishEvents = {
            play_audio: {
                fullEventName: 'hermes_audio_server_publish_play_bytes_json'
            }
        };
        this.publishMessagesList = undefined;
        this.subscribeEvents = {
            'play_finished/': {
                fullEventName: 'hermes_audio_server_subscribe_play_finished_json',
                additionalArguments: eventName => [
                    ref_1.default.allocCString(eventName.substring(14))
                ]
            },
            play_finished_all: {
                fullEventName: 'hermes_audio_server_subscribe_all_play_finished_json'
            },
        };
        this.subscribeMessagesList = undefined;
    }
    destroy() {
        this.call('hermes_drop_audio_server_facade', this.facade);
    }
}
exports.default = Audio;
//# sourceMappingURL=index.js.map